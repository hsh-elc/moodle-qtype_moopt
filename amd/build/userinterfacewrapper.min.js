/******************************************************************************
 *
 * This module provides a wrapper for user-interface modules, handling hiding
 * of the textArea that is being replaced by the UI element,
 * resizing of the UI component, and support of such usability functions as
 * ctrl-alt-M to disable/re-enable the entire user interface, including the
 * wrapper.
 *
 * @package    qtype
 * @subpackage coderunner
 * @copyright  Richard Lobb, 2015, The University of Canterbury
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 *
 * The InterfaceWrapper class is constructed either by Moodle PHP calls of
 * the form
 *
 * $PAGE->requires->js_call_amd($modulename, $functionname, $params)
 *
 * (e.g. from within render.php) or by JavaScript require calls, e.g. from
 * authorform.js when the question author changes UI type.
 *
 * The InterfaceWrapper provides:
 *
 * 1. A constructor InterfaceWrapper(uiname, textareaId) which
 *    hides the given text area, replaces it with a wrapper div (resizable in
 *    height by the user but with width resizing managed by changes in window
 *    width), created an instance of nameInstance as defined in the file
 *    ui_name.js (see below).
 *    params is a record containing the decoded value of
 *
 * 2. A stop() method that destroys the embedded UI and hides the wrapper.
 *
 * 3. A restart() method that shows the wrapper again and re-creates the prior
 *    embedded UI component within it.
 *
 * 4. A loadUi(uiname, params) method that kills any currently running UI element
 *    (if there is one) and (re)loads the specified one. The params parameter
 *    is a record that allows additional parameters to be passed in, such as
 *    those from the question's templateParams field and, in the case of the
 *    Ace UI, the 'lang' (language) that the editor is editing. This data
 *    is supplied by the PHP via the data-params attribute of the answer's
 *    base textarea.
 *
 * 5. Regular checking for any resizing of the wrapper, which are passed on to
 *    the embedded UI element's resize() method.
 *
 * 6. Monitoring of alt-ctrl-M key presses which toggle the visibility of the
 *    wrapper plus UI element and the syncronised textArea by calls to stop()
 *    and restart
 *
 * =========================================================================
 *
 * The embedded user-interface module must be defined in a JavaScript file
 * of the form ui_name.js which must define a class nameInstance with
 * the following functionality:
 *
 * 1. A constructor SomeUiName(textareaId, width, height, params) that
 *    builds an HTML component of the given width and height. textareaId is the
 *    ID of the textArea from which the UI element should obtain its initial
 *    serialisation and to which it should write the serialisation when its save
 *    or destroy methods are called. params is a JavaScript object,
 *    decoded from the JSON templateParams defined by the question plus any
 *    additional data required, such as the 'lang' in the case of Ace.
 *
 * 2. A getElement() method that returns the HTML element that the
 *    InterfaceWrapper is to insert into the document tree.
 *
 * 3. A method failed() that should return true unless the constructor
 *    failed (e.g. because it was not able to de-serialise the text area's
 *    contents). The wrapper will call destroy() on the object if failed()
 *    returns true and abort the use of the UI element. The text area will
 *    have the uiloadfailed class added, which CSS will display in some
 *    error mode (e.g. a red border).
 *
 * 4. A method failMessage() that will be called only when failed() returns
 *    True. It should be a defined CodeRunner language string key.
 *
 * 5. A sync() method that copies the serialised represention of the UI plugin's
 *    data to the related TextArea. This is used when submit is clicked.
 *
 * 6. A destroy() method that should sync the contents to the text area then
 *    destroy any HTML elements or other created content. This method is called
 *    when CTRL-ALT-M is typed by the user to turn off all UI plugins
 *
 * 7. A resize(width, height) method that should resize the entire UI element
 *    to the given dimensions.
 *
 * 8. A hasFocus() method that returns true if the UI element has focus.
 *
 * The return value from the module define is a record with a single field
 * 'Constructor' that references the constructor (e.g. Graph, AceWrapper etc)
 *
 *****************************************************************************/
define("qtype_moopt/userinterfacewrapper",["jquery"],(function($){function InterfaceWrapper(uiname,textareaId){var h,params,t=this;this.GUTTER=14,this.taId=textareaId,this.loadFailId=textareaId+"_loadfailerr",this.textArea=$(document.getElementById(textareaId)),params=this.textArea.attr("data-params"),this.templateParams=params?JSON.parse(params):{},this.templateParams.lang=this.textArea.attr("data-lang"),this.minLines=parseFloat(this.textArea.attr("rows")),this.readOnly=this.textArea.prop("readonly"),this.isLoading=!1,this.loadFailed=!1,this.retries=0,h=Math.max(parseInt(this.textArea.css("height")),this.GUTTER),this.wrapperNode=$("<div id='"+this.taId+"_wrapper' class='ui_wrapper'></div>"),this.textArea.after(this.wrapperNode),this.wrapperNode.hide(),this.wrapperNode.css({resize:"vertical",overflow:"hidden",minHeight:h,width:"100%",border:"1px solid darkgrey"}),this.wrapperNodeMouseDown=!1,this.wrapperNodeWasManuallyResizedAtLeastOnce=!1,this.textArea.data("current-ui-wrapper",this),this.uiInstance=null,this.loadUi(uiname,this.templateParams),$(document).mousemove((function(){t.checkForResize()})),$(document).ready((function(){setTimeout((function(){t.checkForResize(!0),t.checkForResize(!0)}),1e3)})),$(window).resize((function(){t.checkForResize()})),this.wrapperNode.mousedown((function(){t.wrapperNodeMouseDown=!0})),this.wrapperNode.mouseup((function(){t.wrapperNodeMouseDown=!1})),this.textArea.closest("form").submit((function(){null!==t.uiInstance&&t.uiInstance.sync()})),$(document.body).on("keydown",(function(e){77===e.keyCode&&e.ctrlKey&&e.altKey&&(null!==t.uiInstance||t.loadFailed?t.stop():t.restart())}))}return InterfaceWrapper.prototype.loadUi=function(uiname,params){var t=this;if(this.isLoading)return this.retries+=1,void(this.retries>20?(alert("Failed to load "+uiname+" UI component. If this error persists, please report it to your teacher"),this.retries=0,this.loading=0):setTimeout((function(){t.loadUi(uiname,params)}),200));this.retries=0,this.params=params,this.stop(),this.uiname=uiname,""===this.uiname||"none"===this.uiname||sessionStorage.getItem("disableUis")?this.uiInstance=null:(this.isLoading=!0,require(["qtype_moopt/ui_"+this.uiname],(function(ui){var uiInstance,loadFailDiv,jqLoadFailDiv,h,w,langString,errorDiv;h=t.wrapperNode.innerHeight()-t.GUTTER,w=t.wrapperNode.innerWidth(),(uiInstance=new ui.Constructor(t.taId,w,h,params)).failed()?(t.loadFailed=!0,t.wrapperNode.hide(),uiInstance.destroy(),t.uiInstance=null,t.textArea.addClass("uiloadfailed"),loadFailDiv='<div id="'+t.loadFailId+'"class="uiloadfailed"></div>',(jqLoadFailDiv=$(loadFailDiv)).insertBefore(t.textArea),langString=uiInstance.failMessage(),errorDiv=jqLoadFailDiv,require(["core/str"],(function(str){var s=str.get_string(langString,"qtype_moopt"),fallback=str.get_string("ui_fallback","qtype_moopt");$.when(s,fallback).done((function(s,fallback){errorDiv.html(s+"<br>"+fallback)}))}))):(t.hLast=0,t.wLast=0,t.lhLast=0,t.hshLast=0,t.textArea.hide(),t.wrapperNode.show(),t.wrapperNode.append(uiInstance.getElement()),t.uiInstance=uiInstance,t.loadFailed=!1,t.checkForResize()),t.isLoading=!1})))},InterfaceWrapper.prototype.stop=function(){null!==this.uiInstance&&(this.textArea.show(),this.uiInstance.hasFocus()&&(this.textArea.focus(),this.textArea[0].selectionStart=this.textArea[0].value.length),this.uiInstance.destroy(),this.uiInstance=null,this.wrapperNode.hide()),this.loadFailed=!1,this.textArea.removeClass("uiloadfailed"),$(document.getElementById(this.loadFailId)).remove()},InterfaceWrapper.prototype.restart=function(){null===this.uiInstance&&this.loadUi(this.uiname,this.params)},InterfaceWrapper.prototype.checkForResize=function(){let force=arguments.length>0&&void 0!==arguments[0]&&arguments[0];var h,hAdjusted,w,wAdjusted,xLeft,maxWidth,lh,hsh,ml;this.uiInstance&&(h=this.wrapperNode.innerHeight(),w=this.wrapperNode.innerWidth(),lh=this.uiInstance.getLineHeight(),hsh=this.uiInstance.getHScrollHeight(),h==this.hLast&&w==this.wLast&&lh==this.lhLast&&hsh==this.hshLast||(this.wrapperNodeMouseDown&&(this.wrapperNodeWasManuallyResizedAtLeastOnce=!0),ml=this.wrapperNodeWasManuallyResizedAtLeastOnce?1:this.minLines,xLeft=this.wrapperNode.offset().left,maxWidth=$(window).innerWidth()-xLeft-25,hAdjusted=h,wAdjusted=Math.min(maxWidth,w),0!=lh&&(hAdjusted=Math.max(ml*lh+hsh,hAdjusted)),this.uiInstance.resize(wAdjusted,hAdjusted,force),this.hLast=this.wrapperNode.innerHeight(),this.wLast=this.wrapperNode.innerWidth(),this.lhLast=lh,this.hshLast=hsh))},{newUiWrapper:function(uiname,textareaId){return uiname?new InterfaceWrapper(uiname,textareaId):null},InterfaceWrapper:InterfaceWrapper}}));

//# sourceMappingURL=userinterfacewrapper.min.js.map